#include "/Engine/Public/Platform.ush"
#include "/Engine/Private/Common.ush"
#include "/Engine/Private/ScreenPass.ush"

SCREEN_PASS_TEXTURE_VIEWPORT(ViewParams)

SamplerState InputSampler;
Texture2D SceneColor;
Texture2D InputStencilTexture;
float4 Color;

float2 PosToUV(float2 Pos) {
	float2 ViewportUV = ((Pos - ViewParams_ViewportMin.xy) * ViewParams_ViewportSizeInverse.xy);
	return ViewportUV * ViewParams_UVViewportSize + ViewParams_UVViewportMin;
}

float4 CombineMainPS(float4 SvPosition : SV_POSITION) : SV_Target0 {
	float2 UV = PosToUV(SvPosition.xy);
    float2 stencil = Texture2DSample(InputStencilTexture, InputSampler, UV).rg;

	if(stencil.y > 0 || stencil.x >0)
    {
        return Color;
    }
    else
    {
        return SceneColor.SampleLevel(InputSampler, UV, 0);
    }
}